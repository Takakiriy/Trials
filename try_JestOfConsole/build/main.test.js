"use strict";
exports.__esModule = true;
var main = require("./main");
var path = require("path");
var callMain = main.callMainFromJest;
if (path.basename(process.cwd()) !== 'src') {
    // Because the second execute of Jest watch mode is inherited the current folder.
    process.chdir('src');
}
// test
test('First', function () {
    callMain();
});
test('Check stdout', function () {
    callMain(['A', 'B'], { 'command': 'stdout' });
    expect(main.stdout).toBe('ABC\nDE\n["A","B"]\n');
});
test('locale', function () {
    var defaultLocale = Intl.NumberFormat().resolvedOptions().locale;
    callMain([], { 'command': 'show-locale' });
    expect(main.stdout).toBe(defaultLocale + '\n');
    callMain([], { 'command': 'show-locale', 'locale': 'fr-FR' });
    expect(main.stdout).toBe('fr-FR\n');
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWFpbi50ZXN0LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vc3JjL21haW4udGVzdC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLDZCQUErQjtBQUMvQiwyQkFBNkI7QUFFN0IsSUFBTyxRQUFRLEdBQUcsSUFBSSxDQUFDLGdCQUFnQixDQUFDO0FBRXhDLElBQUksSUFBSSxDQUFDLFFBQVEsQ0FBQyxPQUFPLENBQUMsR0FBRyxFQUFFLENBQUMsS0FBSyxLQUFLLEVBQUU7SUFDeEMsaUZBQWlGO0lBQ2pGLE9BQU8sQ0FBQyxLQUFLLENBQUMsS0FBSyxDQUFDLENBQUM7Q0FDeEI7QUFFRCxPQUFPO0FBQ1AsSUFBSSxDQUFDLE9BQU8sRUFBRTtJQUNWLFFBQVEsRUFBRSxDQUFDO0FBQ2YsQ0FBQyxDQUFDLENBQUM7QUFFSCxJQUFJLENBQUMsY0FBYyxFQUFFO0lBQ2pCLFFBQVEsQ0FBQyxDQUFDLEdBQUcsRUFBRSxHQUFHLENBQUMsRUFBRSxFQUFDLFNBQVMsRUFBRSxRQUFRLEVBQUMsQ0FBQyxDQUFDO0lBQzVDLE1BQU0sQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLENBQUMsSUFBSSxDQUFDLHNCQUFzQixDQUFDLENBQUM7QUFDckQsQ0FBQyxDQUFDLENBQUM7QUFFSCxJQUFJLENBQUMsUUFBUSxFQUFFO0lBQ1gsSUFBTyxhQUFhLEdBQUcsSUFBSSxDQUFDLFlBQVksRUFBRSxDQUFDLGVBQWUsRUFBRSxDQUFDLE1BQU0sQ0FBQztJQUVwRSxRQUFRLENBQUMsRUFBRSxFQUFFLEVBQUMsU0FBUyxFQUFFLGFBQWEsRUFBQyxDQUFDLENBQUM7SUFDekMsTUFBTSxDQUFDLElBQUksQ0FBQyxNQUFNLENBQUMsQ0FBQyxJQUFJLENBQUMsYUFBYSxHQUFHLElBQUksQ0FBQyxDQUFDO0lBRS9DLFFBQVEsQ0FBQyxFQUFFLEVBQUUsRUFBQyxTQUFTLEVBQUUsYUFBYSxFQUFFLFFBQVEsRUFBRSxPQUFPLEVBQUMsQ0FBQyxDQUFDO0lBQzVELE1BQU0sQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLENBQUMsSUFBSSxDQUFDLFNBQVMsQ0FBQyxDQUFDO0FBQ3hDLENBQUMsQ0FBQyxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0ICogYXMgbWFpbiBmcm9tICcuL21haW4nO1xyXG5pbXBvcnQgKiBhcyBwYXRoIGZyb20gXCJwYXRoXCI7XHJcbmltcG9ydCAqIGFzIGxpYiBmcm9tIFwiLi9saWJcIjtcclxuY29uc3QgIGNhbGxNYWluID0gbWFpbi5jYWxsTWFpbkZyb21KZXN0O1xyXG5cclxuaWYgKHBhdGguYmFzZW5hbWUocHJvY2Vzcy5jd2QoKSkgIT09ICdzcmMnKSB7XHJcbiAgICAvLyBCZWNhdXNlIHRoZSBzZWNvbmQgZXhlY3V0ZSBvZiBKZXN0IHdhdGNoIG1vZGUgaXMgaW5oZXJpdGVkIHRoZSBjdXJyZW50IGZvbGRlci5cclxuICAgIHByb2Nlc3MuY2hkaXIoJ3NyYycpO1xyXG59XHJcblxyXG4vLyB0ZXN0XHJcbnRlc3QoJ0ZpcnN0JywgKCkgPT4ge1xyXG4gICAgY2FsbE1haW4oKTtcclxufSk7XHJcblxyXG50ZXN0KCdDaGVjayBzdGRvdXQnLCAoKSA9PiB7XHJcbiAgICBjYWxsTWFpbihbJ0EnLCAnQiddLCB7J2NvbW1hbmQnOiAnc3Rkb3V0J30pO1xyXG4gICAgZXhwZWN0KG1haW4uc3Rkb3V0KS50b0JlKCdBQkNcXG5ERVxcbltcIkFcIixcIkJcIl1cXG4nKTtcclxufSk7XHJcblxyXG50ZXN0KCdsb2NhbGUnLCAoKSA9PiB7XHJcbiAgICBjb25zdCAgZGVmYXVsdExvY2FsZSA9IEludGwuTnVtYmVyRm9ybWF0KCkucmVzb2x2ZWRPcHRpb25zKCkubG9jYWxlO1xyXG5cclxuICAgIGNhbGxNYWluKFtdLCB7J2NvbW1hbmQnOiAnc2hvdy1sb2NhbGUnfSk7XHJcbiAgICBleHBlY3QobWFpbi5zdGRvdXQpLnRvQmUoZGVmYXVsdExvY2FsZSArICdcXG4nKTtcclxuXHJcbiAgICBjYWxsTWFpbihbXSwgeydjb21tYW5kJzogJ3Nob3ctbG9jYWxlJywgJ2xvY2FsZSc6ICdmci1GUid9KTtcclxuICAgIGV4cGVjdChtYWluLnN0ZG91dCkudG9CZSgnZnItRlJcXG4nKTtcclxufSk7XHJcbiJdfQ==