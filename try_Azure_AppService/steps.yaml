# Azure App Service

準備:
    Docker for Windows をインストールします:
    Azure のアカウントを作成して、開発に使う PC で、 https://portal.azure.com/ にサインインします:
        サインインしたら、ブラウザーを閉じます
    Azure CLI をインストールします:
        https://docs.microsoft.com/ja-jp/cli/azure/install-azure-cli-windows?view=azure-cli-latest&tabs=azure-cli
            Microsoft Installer (MSI) >> Azure CLI current version
            azure-cli-2.12.1.msi

Docker イメージを ACR 経由で Azure App Service にデプロイする:
    #// ACR = Azure Container Registory
    設定:
        __ResourceGroup__: web1res
        __AppName__: sagep-web1  #// Azure 全体で唯一
        __RegistryName__: web1reg
        __DockerImageName__: web_server
        __DockerImageTag__: 0.0.1
    Docker イメージが正しく動くことをローカルで確認します:
    ACR リソースを作成します（ACR リソースが無いとき）:
        - 参考: https://docs.microsoft.com/ja-jp/azure/container-registry/container-registry-get-started-portal
        - https://portal.azure.com/ >> コンテナー レジストリ >> 追加（左上）:
            リソース グループ: 新規作成 >> web1res  #// __ResourceGroup__
            レジストリ名: web1reg  #// __RegistryName__
            場所: 東日本
            SKU: Basic
            OK1: 「確認および作成」ボタン
            OK2: 「作成」ボタン
            OK3: 「リソースに移動」ボタン
    App Service を新規作成します（App Service リソースが無いとき）:
        - https://portal.azure.com/ >> App Service:
            - 追加（左上）:
                リソース グループ: web1res  #// __ResourceGroup__
                Web アプリ名: sagep-web1  #// __AppName__
                公開: Docker コンテナー
                オペレーティングシステム: Linux
                地域: Japan East
                Linux プラン: ... (F1)
            - 次 Docker:
                オプション: 単一コンテナー
                イメージ ソース: クイック スタート
                サンプル: NGINX
            - 次 監視:
                Application Insights を有効にする: いいえ
            - 次 タグ:
            - 次 確認および作成:
                - 作成
            - リソースに移動:
    ACR Webhook を有効にします（App Service を新規作成したとき）:
        #// PowerShell
        - az login
        - az webapp deployment container config --name "sagep-web1" --resource-group "web1res" --enable-cd true
            #template: - az webapp deployment container config --name "__AppName__" --resource-group "__ResourceGroup__" --enable-cd true
        - az acr update --name "web1reg" --admin-enabled true
            #template: - az acr update --name "__RegistryName__" --admin-enabled true
            #// 下記「コンテナーの設定」に登録するために必要です
    ACR に登録する Docker イメージを用意します:
        #// PowerShell
        - cd  "__FolderWithDockerFile__"
        - docker build  -t "web1reg.azurecr.io/web_server:0.0.1"  "."
            #template: - docker build  -t "__RegistryName__.azurecr.io/__DockerImageName__:__DockerImageTag__"  "."
    Docker イメージを ACR にプッシュします:
        #// PowerShell
        - az login  #// しばらくデプロイしていないときのみ必要
        - az acr login --name "web1reg"  #// "__RegistryName__"  #// しばらくデプロイしていないときのみ必要
        - docker push  "web1reg.azurecr.io/web_server:0.0.1"
            #template: - docker push  "__RegistryName__.azurecr.io/__DockerImageName__:__DockerImageTag__"
    継続的デプロイを有効にします（有効にしたことがないとき）:
        https://portal.azure.com/ >> App Service >>（アプリ名）>>（設定）:
        コンテナーの設定:
            （最初の設定）: 単一のコンテナー
            イメージのソース: Azure コンテナー レジストリ
            レジストリ: web1reg  #// __RegistryName__
            イメージ: web_server  #// __DockerImageName__  すでに登録済みのイメージのみ選択できます
            タグ: 0.0.1  #// __DockerImageTag__  すでに登録済みのイメージのみ選択できます
            継続的なデプロイ: オン
            OK: 「保存」ボタン
    起動します:
        - https://portal.azure.com/ >> App Service >>（アプリ名）
        - 概要 >> 参照（右半分の左上）
    上記 Azure リソースを削除するとき:
        https://portal.azure.com/ >> リソース グループ


（未確認）ZIP パッケージから Azure App Service のアプリを直接実行する:
    メモ: Node.js + zip。 zip の構成は不明。 下記の方法では Node.js の初期画面のみ
    参考: https://docs.microsoft.com/ja-jp/azure/app-service/deploy-run-package
    Windows:
        - Reactなどのプロジェクト/build フォルダーの中のファイルやフォルダーをすべて選択
        - 右クリック >> 送る >> 圧縮フォルダー
    bash:
        - az group create  --name "sagep-app1"  --location "japaneast"
        - az appservice plan create --name "sagep-plan1" --resource-group "sagep-app1" --sku FREE --is-linux
        - az webapp create  --name "sagep-app-zip1"  --resource-group "sagep-app1"  --plan "sagep-plan1" --runtime "NODE|12.9"
        - az webapp config appsettings set --name "sagep-app-zip1" --resource-group "sagep-app1" --settings WEBSITE_RUN_FROM_PACKAGE="1"
        - az webapp deployment source config-zip --name "sagep-app-zip1" --resource-group "sagep-app1" --src "react-build.zip"
        - replaced:
            - az group create  --name "__GroupName__"  --location "__Region__"
            - az appservice plan create --name "__ServicePlan__" --resource-group "__GroupName__" --sku FREE --is-linux
            - az webapp create  --name "__AppName__"  --resource-group "__GroupName__"  --plan "__ServicePlan__" --runtime "node|10.15"
            - az webapp config appsettings set --name "__AppName__" --resource-group "__GroupName__" --settings WEBSITE_RUN_FROM_PACKAGE="1"
            - az webapp deployment source config-zip --name "__AppName__" --resource-group "__GroupName__" --src "__FileName__.zip"

（未確認）FTP:
    App Service の概要に FTP のホスト名などが表示されます。
